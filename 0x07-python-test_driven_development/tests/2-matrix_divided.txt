============================
Doctest for 2-matrix_divided.py
============================

``matrix_divided()`` returns a new matrix with the elements divided by div.

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix_divided(matrix, -2)
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
    >>> matrix_divided(matrix, 7.3234375724)
    [[0.14, 0.27, 0.41], [0.55, 0.68, 0.82]]
    >>> matrix_divided(matrix, -34.23513)
    [[-0.03, -0.06, -0.09], [-0.12, -0.15, -0.18]]
    >>> matrix_divided([[1, 17.83, 'str'], [3.2, -76.33, "str"]], 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    >>> matrix_divided([], 4)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> matrix_divided([])
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
    >>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8, 9]]
    >>> matrix_divided(matrix, 3.9)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 'str')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> matrix_divided(matrix, int('3w5'))
    Traceback (most recent call last):
        ...
    ValueError: invalid literal for int() with base 10: '3w5'
    >>> matrix_divided(matrix, int('35'))
    [[0.03, 0.06, 0.09], [0.11, 0.14, 0.17]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
